{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","console","log","getReorderedGoods","sort","goodA","goodB","ALPHABET","localeCompare","LENGTH","length","reverse","className","type","onClick","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,4EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuBE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EAjCD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENE,EAAY,YAAOC,GAKzB,OAFAC,QAAQC,IAAIP,EAAUE,GAEfE,EAwBcI,CACnBZ,EACA,CAAEI,WAAUE,eAoBd,OAjBAE,EAAaK,MAAK,SAACC,EAAOC,GACxB,OAAQX,GACN,KAAKL,EAASiB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITb,GACFE,EAAaY,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAxCyB,WAC/BlB,EAAYN,EAASiB,WAwCfK,UAAWG,IACT,iBACA,CACE,WAAYpB,IAAaL,EAASiB,WANxC,iCAaA,wBACEM,KAAK,SACLC,QAjDuB,WAC7BlB,EAAYN,EAASmB,SAiDfG,UAAWG,IACT,oBACA,CACE,WAAYpB,IAAaL,EAASmB,SANxC,4BAaA,wBACEI,KAAK,SACLC,QAtEkB,WACxBhB,GAAeD,IAsETe,UAAWG,IACT,oBACA,CACE,YAAclB,IANpB,qBAaCF,IAAaL,EAASI,MAAQG,EAC7B,wBACEgB,KAAK,SACLC,QAxEkB,WAC1BlB,EAAYN,EAASI,MACrBI,GAAc,IAuENc,UAAU,4BAHZ,mBAOE,QAGN,6BACE,6BACGb,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cCzIrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.579c638e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handleListReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleListSortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleListSortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleListSortReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={handleListSortByAlphabet}\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleListSortByLength}\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleListReverse}\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': (!isReversed),\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {sortType !== SortType.NONE || isReversed ? (\n          <button\n            type=\"button\"\n            onClick={handleListSortReset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        ) : null}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}